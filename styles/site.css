/*! normalize.css v4.0.0 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Change the default font family in all browsers (opinionated).
 * 2. Prevent adjustments of font size after orientation changes in IE and iOS.
 */
@import url(http://fonts.googleapis.com/css?family=Orbitron:700);
html {
  color: #333;
  font-size: 1em;
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 * 2. Add the correct display in IE.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
  /* 1 */
  display: block;
}

/**
 * Add the correct display in IE 9-.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
}

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Add the correct display in IE 10-.
 * 1. Add the correct display in IE.
 */
template,
[hidden] {
  display: none;
}

/* Links
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent;
  color: #59ABE3;
}

/**
 * Remove the outline on focused links when they are also active or hovered
 * in all browsers (opinionated).
 */
a:active,
a:hover {
  outline-width: 0;
}

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the bottom border in Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */
}

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit;
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000;
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none;
}

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */
/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px;
}

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/* Forms
   ========================================================================== */
/**
 * 1. Change font properties to `inherit` in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
select,
textarea {
  font: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Restore the font weight unset by the previous rule.
 */
optgroup {
  font-weight: bold;
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 * 2. Show the overflow in Edge, Firefox, and IE.
 */
button,
input,
select {
  /* 2 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
input:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Change the border, margin, and padding in all browsers (opinionated).
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * Correct the odd appearance of search inputs in Chrome and Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
}

/**
 * Remove the inner padding and cancel buttons in Chrome on OS X and
 * Safari on OS X.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

.border {
  border: 1px solid #ECF0F1;
}

.border-top {
  border-top: 1px solid #ECF0F1;
}

.border-bottom {
  border-bottom: 1px solid #ECF0F1;
}

.border-left {
  border-left: 1px solid #ECF0F1;
}

.border-right {
  border-right: 1px solid #ECF0F1;
}

.bg-white-offset {
  background-color: #f7f7f7;
}

.bg-blue {
  background-color: #59ABE3;
}

.c-black-offset {
  color: #333;
}

.c-white {
  color: #FFF;
}

.c-slate {
  color: #6C7A89;
}

body {
  line-height: 1.5;
}

@-webkit-keyframes fadeInSlideIn {
  0% {
    opacity: 0;
    -webkit-transform: translateY(60px);
            transform: translateY(60px);
  }
  100% {
    opacity: 1;
    -webkit-transform: translateY(0);
            transform: translateY(0);
  }
}

@keyframes fadeInSlideIn {
  0% {
    opacity: 0;
    -webkit-transform: translateY(60px);
            transform: translateY(60px);
  }
  100% {
    opacity: 1;
    -webkit-transform: translateY(0);
            transform: translateY(0);
  }
}

.header {
  background-color: #434349;
  overflow: hidden;
  transition: all .5s ease-in-out;
  width: 100%;
}

@media (min-width: 685px) {
  .header {
    position: fixed;
    top: 0;
    z-index: 100;
  }
}

@media (min-width: 685px) {
  .header.on-scroll {
    background-color: #FFF;
    box-shadow: inset 0 -2px 0 #f7f7f7;
  }
}

@media (min-width: 685px) {
  .header.on-scroll .main-navigation-item a {
    color: #6C7A89;
  }
}

@media (min-width: 685px) {
  .header.on-scroll .main-navigation-item a:hover {
    color: #616d7b;
  }
}

.site-title {
  margin: 0;
  padding: 6px 15px;
  width: 100px;
}

.site-title a {
  display: inline-block;
}

.site-title img {
  display: inline-block;
  margin: 0 auto;
  max-width: 100%;
}

@media (min-width: 685px) {
  .nav-wrapper {
    padding-top: 18px;
    width: 85%;
  }
}

.toggle-menu {
  border-radius: 6px;
  border: 1px solid #BDC3C7;
  color: #BDC3C7;
  display: inline-block;
  padding: 6px 15px;
  position: absolute;
  right: 30px;
  right: 1.875rem;
  top: 24px;
  top: 1.5rem;
  text-decoration: none;
  transition: box-shadow 0.5s ease;
  z-index: 30;
}

@media (min-width: 685px) {
  .toggle-menu {
    display: none;
  }
}

.toggle-menu:hover {
  background-color: rgba(0, 0, 0, 0.3);
  color: #FFF;
  box-shadow: none;
}

.toggle-menu.active {
  color: #FFF;
  position: fixed;
  z-index: 30;
}

.toggle-menu.active:hover {
  box-shadow: none;
}

.main-navigation {
  background-color: #6C7A89;
  color: #FFF;
  display: none;
  height: 100%;
  left: 0;
  opacity: 0;
  overflow: hidden;
  position: fixed;
  transition: all .5s ease-in-out;
  text-align: center;
  top: 0;
  visibility: hidden;
  width: 100%;
  z-index: 20;
}

@media (min-width: 685px) {
  .main-navigation {
    background-color: transparent;
    display: block;
    opacity: 1;
    position: relative;
    text-align: right;
    visibility: visible;
    width: auto;
  }
}

.main-navigation.active {
  display: block;
  opacity: .95;
  visibility: visible;
}

.main-navigation-list {
  top: 50%;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
  list-style-type: none;
  margin: 0;
  padding: 0;
  position: relative;
}

@media (min-width: 685px) {
  .main-navigation-list {
    top: 0;
    -webkit-transform: none;
            transform: none;
  }
}

.main-navigation-item {
  margin-bottom: 12px;
  margin-bottom: 0.75rem;
  padding: 0;
}

@media (min-width: 685px) {
  .main-navigation-item {
    display: inline-block;
    margin: 0;
    padding: 0;
  }
}

.main-navigation-item a {
  color: #FFF;
  display: inline-block;
  padding: 12px 15px;
  padding: 0.75rem 0.9375rem;
  text-decoration: none;
  transition: box-shadow 0.5s ease;
}

@media (min-width: 685px) {
  .main-navigation-item a {
    color: #BDC3C7;
  }
}

.main-navigation-item a:hover {
  box-shadow: inset 0 -2px 0 #FFF;
}

@media (min-width: 685px) {
  .main-navigation-item a:hover {
    color: #FFF;
  }
}

.active .main-navigation-item {
  -webkit-animation: fadeInSlideIn .5s forwards;
          animation: fadeInSlideIn .5s forwards;
}

.hero {
  background-color: #434349;
  color: #FFF;
  overflow: hidden;
  position: relative;
  width: 100%;
}

@media (min-width: 685px) {
  .hero {
    height: 450px;
  }
}

.hero-image {
  display: none;
}

@media (min-width: 685px) {
  .hero-image {
    display: block;
    position: absolute;
    width: 100%;
    z-index: 1;
  }
}

.hero-image img {
  max-width: 100%;
}

.hero-wrapper {
  position: relative;
  text-align: center;
  z-index: 10;
}

@media (min-width: 685px) {
  .hero-wrapper {
    top: 50%;
    -webkit-transform: translateY(-50%);
            transform: translateY(-50%);
  }
}

.hero-title {
  font-size: 36px;
  margin: 0;
}

@media (min-width: 685px) {
  .hero-title {
    font-size: 60px;
  }
}

.hero-subtitle p strong {
  font-size: 18px;
}

@media (min-width: 685px) {
  .hero-subtitle p strong {
    font-size: 21px;
  }
}

.hero-quote {
  background-color: #f7f7f7;
  box-shadow: inset 0 -2px 0 #ECF0F1;
  color: #6C7A89;
  overflow: hidden;
  margin: 0 0 30px 0;
  padding: 12px 15px;
  text-align: center;
}

/* Stars
------------------------------------- */
.stars {
  overflow: hidden;
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
}

.stars {
  background-image: radial-gradient(2px 2px at 20px 30px, #eee, transparent), radial-gradient(2px 2px at 40px 70px, #fff, transparent), radial-gradient(2px 2px at 50px 160px, #ddd, transparent), radial-gradient(2px 2px at 90px 40px, #fff, transparent), radial-gradient(2px 2px at 130px 80px, #fff, transparent), radial-gradient(2px 2px at 160px 120px, #ddd, transparent);
  background-repeat: repeat;
  background-size: 200px 200px;
  -webkit-animation: zoom 10s infinite;
          animation: zoom 10s infinite;
  opacity: 0;
}

.stars:nth-child(1) {
  background-position: 50% 50%;
  -webkit-animation-delay: 0s;
          animation-delay: 0s;
}

.stars:nth-child(2) {
  background-position: 20% 60%;
  -webkit-animation-delay: 1s;
          animation-delay: 1s;
}

.stars:nth-child(3) {
  background-position: -20% -30%;
  -webkit-animation-delay: 2s;
          animation-delay: 2s;
}

.stars:nth-child(4) {
  background-position: 40% -80%;
  -webkit-animation-delay: 3s;
          animation-delay: 3s;
}

.stars:nth-child(5) {
  background-position: -20% 30%;
  -webkit-animation-delay: 4s;
          animation-delay: 4s;
}

@-webkit-keyframes zoom {
  0% {
    opacity: 0;
    -webkit-transform: scale(0.5);
            transform: scale(0.5);
    -webkit-animation-timing-function: ease-in;
            animation-timing-function: ease-in;
  }
  85% {
    opacity: 1;
    -webkit-transform: scale(1);
            transform: scale(1);
    -webkit-animation-timing-function: linear;
            animation-timing-function: linear;
  }
  100% {
    opacity: 0;
    -webkit-transform: scale(1.5);
            transform: scale(1.5);
  }
}

@keyframes zoom {
  0% {
    opacity: 0;
    -webkit-transform: scale(0.5);
            transform: scale(0.5);
    -webkit-animation-timing-function: ease-in;
            animation-timing-function: ease-in;
  }
  85% {
    opacity: 1;
    -webkit-transform: scale(1);
            transform: scale(1);
    -webkit-animation-timing-function: linear;
            animation-timing-function: linear;
  }
  100% {
    opacity: 0;
    -webkit-transform: scale(1.5);
            transform: scale(1.5);
  }
}

.btn {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  cursor: pointer;
  display: inline-block;
  border: 1px solid transparent;
  border: 0.0625rem solid transparent;
  line-height: 16px;
  line-height: 1rem;
  margin: 0;
  outline: 0;
  padding: 8px 15px;
  padding: 0.5rem 0.9375rem;
  text-align: center;
  text-decoration: none;
  vertical-align: middle;
  white-space: nowrap;
}

.footer {
  display: none;
}

/*# sourceMappingURL=data:application/json;base64, */
